<!--*
*MIT License
*
*Copyright (c) 2022 S Christison
*
*Permission is hereby granted, free of charge, to any person obtaining a copy
*of this software and associated documentation files (the "Software"), to deal
*in the Software without restriction, including without limitation the rights
*to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
*copies of the Software, and to permit persons to whom the Software is
*furnished to do so, subject to the following conditions:
*
*The above copyright notice and this permission notice shall be included in all
*copies or substantial portions of the Software.
*
*THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
*IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
*FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
*AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
*LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
*OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
*SOFTWARE.
*-->

<UserControl
    x:Class="BTNET.VM.Controls.ListViewControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:BTNET.VM.Controls"
    xmlns:converters="clr-namespace:BTNET.BV.Converters"
    Name="ListViewC"
    AllowDrop="False">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:ConvertQuantityTickScaleBase x:Key="tickScale"/>
        <converters:ConvertPriceTickScaleBase x:Key="priceScale"/>
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteRowLocalCommand}" />
        <KeyBinding
            Key="C"
            Command="{Binding MainVM.CopySelectedItemToClipboardCommand}"
            Modifiers="Ctrl" />
    </UserControl.InputBindings>
    <ListView
        x:Name="listView1"
        Foreground="AntiqueWhite"
        ItemsSource="{Binding Orders.Current}"
        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
        ScrollViewer.VerticalScrollBarVisibility="Hidden"
        SelectedItem="{Binding SelectedListItem}" 
        HorizontalAlignment="Center"
        HorizontalContentAlignment="Center">
        <ListView.Resources>
            <ItemsPanelTemplate x:Key="x">
                <VirtualizingStackPanel />
            </ItemsPanelTemplate>
        </ListView.Resources>
        <ListView.View>
            <GridView AllowsColumnReorder="False">
                <GridViewColumn DisplayMemberBinding="{Binding TargetNullValue}" Width="{Binding VisibilityVM.OrderListWidthOffset}">                    
                </GridViewColumn>
                <GridViewColumn
                        Width="20">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding StatusImage, UpdateSourceTrigger=PropertyChanged}" Width="10" Height="10" HorizontalAlignment="Center" />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn
                    Width="35"
                    DisplayMemberBinding="{Binding Side}"
                    Header="Side" />
                <GridViewColumn
                    Width="110"
                    DisplayMemberBinding="{Binding CreateTime, StringFormat=dd/MM/yy hh:mm:ss, UpdateSourceTrigger=PropertyChanged}"
                    Header="Date" />
                <GridViewColumn
                    Width="150"
                    DisplayMemberBinding="{Binding Fulfilled, UpdateSourceTrigger=PropertyChanged}"
                    Header="Fulfilled" />
                <GridViewColumn
                    Width="105"
                    DisplayMemberBinding="{Binding Price, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource priceScale}}"
                    Header="Price" />
                <GridViewColumn
                    Width="80"
                    DisplayMemberBinding="{Binding CumulativeQuoteQuantityFilled, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource tickScale}}"
                    Header="Total" />
                <GridViewColumn
                    Width="{Binding VisibilityVM.InterestWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    DisplayMemberBinding="{Binding InterestToDateQuote, UpdateSourceTrigger=PropertyChanged, StringFormat='\{0:N8\}'}"
                    Header="ITD Quote" />
                <GridViewColumn
                    Width="{Binding VisibilityVM.InterestWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    DisplayMemberBinding="{Binding InterestToDate, UpdateSourceTrigger=PropertyChanged, StringFormat='\{0:N8\}'}"
                    Header="ITD Base" />
                <GridViewColumn
                    Width="{Binding VisibilityVM.InterestWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    DisplayMemberBinding="{Binding InterestPerHour, UpdateSourceTrigger=PropertyChanged, StringFormat='\{0:N8\}'}"
                    Header="Interest/PH" />
                <GridViewColumn
                    Width="{Binding VisibilityVM.InterestWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    DisplayMemberBinding="{Binding InterestPerDay, UpdateSourceTrigger=PropertyChanged, StringFormat='\{0:N8\}'}"
                    Header="Interest/PD" />
                <GridViewColumn
                    Width="105"
                    DisplayMemberBinding="{Binding Pnl, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource tickScale}}"
                    Header="Run PnL" />
                <GridViewColumn
                    Width="105"
                    DisplayMemberBinding="{Binding PnlPercent, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource tickScale}}"
                    Header="PnL Percent" />
                <GridViewColumn Width="180" Header="Tasks">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <controls:OrderTasks />
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <!--<GridViewColumn Width="70" Header="TIF" DisplayMemberBinding="{Binding TimeInForce, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                <GridViewColumn Width="80" Header="Status" DisplayMemberBinding="{Binding Status, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                <GridViewColumn Width="80" Header="SL/TP" DisplayMemberBinding="{Binding SLTPPrice, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                <GridViewColumn Width="80" Header="Iceberg" DisplayMemberBinding="{Binding IcebergQty, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />-->
                <GridViewColumn DisplayMemberBinding="{Binding TargetNullValue}" Width="{Binding VisibilityVM.OrderListWidthOffset}" />
            </GridView>
        </ListView.View>
    </ListView>
</UserControl>
